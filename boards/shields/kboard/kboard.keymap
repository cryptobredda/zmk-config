/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt {
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

/ {
    macros {
        cad_move: cad_move {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp M &kp RET>;
            label = "CAD_MOVE";
        };

        cad_trim: cad_copy_with_base {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp T &kp R &kp RET>;
            label = "CAD_COPY_WITH_BASE";
        };

        cad_Line_Poly: cad_Line_Poly {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_tap>,
                <&kp L &kp RET>,
                <&macro_press>,
                <&kp P &kp O &kp L &kp Y &kp RET>;

            label = "CAD_LINE_POLY";
        };

        cad_rotate: cad_rotate {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp R &kp O &kp T &kp RET>;
            label = "CAD_ROTATE";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // Default Layer (Layer 0)

            bindings = <
&kp ESC       &mt F1 N1       &mt F2 N2       &mt F3 N3           &mt F4 N4           &mt F5 N5         &mt F6 N6            &mt F7 N7            &mt F8 N8          &mt F9 N9           &mt F10 N0            &kp BSPC
&mt CAPS TAB  &mt ESC Q       &kp W           &kp E               &kp R               &kp T             &mt MINUS Y          &mt LEFT_BRACE U     &mt RIGHT_BRACE I  &mt LEFT_BRACKET O  &mt RIGHT_BRACKET P   &kp DEL
&kp LSHFT     &mt LEFT_GUI A  &mt LEFT_ALT S  &mt LEFT_SHIFT D    &mt LEFT_CONTROL F  &kp G             &kp H                &mt RIGHT_CONTROL J  &mt RIGHT_SHIFT K  &mt RIGHT_ALT L     &mt RIGHT_GUI SEMI    &mt EQUAL SQT
&kp LCTRL     &mt LC(Z) Z     &mt LC(X) X     &mt LC(C) C         &mt LC(V) V         &kp B             &kp N                &kp M                &kp COMMA          &kp DOT             &mt NON_US_BSLH FSLH  &kp RSHFT
                                              &mt LEFT_ALT ENTER  &kp SPACE           &mo 1      &mo 1  &mt RIGHT_ALT ENTER  &kp BACKSPACE
            >;
        };

        layer_select_layer {
            // Layer Select Layer (Layer 1)

            bindings = <
&trans  &trans                             &trans                               &to 8           &to 7             &trans          &trans  &to 7              &to 8            &trans                             &trans                               &trans
&trans  &to 2                              &to 3                                &to 4           &to 5             &to 6           &to 6   &to 5              &to 4            &to 3                              &to 2                                &trans
&trans  &mt LG(LC(LEFT_ARROW)) LEFT_ARROW  &mt LG(LC(RIGHT_ARROW)) RIGHT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW      &trans          &trans  &kp UP_ARROW       &kp DOWN_ARROW   &mt LG(LC(LEFT_ARROW)) LEFT_ARROW  &mt LG(LC(RIGHT_ARROW)) RIGHT_ARROW  &trans
&trans  &kp LEFT_GUI                       &kp LEFT_ALT                         &kp LEFT_SHIFT  &kp LEFT_CONTROL  &trans          &trans  &kp RIGHT_CONTROL  &kp RIGHT_SHIFT  &kp RIGHT_ALT                      &kp RIGHT_GUI                        &trans
                                                                                &trans          &trans            &trans  &trans  &trans  &trans
            >;
        };

        numpad_layer {
            // Numpad Layer (Layer 2)

            bindings = <
&to 0   &kp KP_MULTIPLY  &kp N7   &kp N8  &kp N9   &trans            &none      &kp N7   &kp N8  &kp N9   &kp KP_MULTIPLY  &to 0
&trans  &kp KP_DIVIDE    &kp N4   &kp N5  &kp N6   &trans            &trans     &kp N4   &kp N5  &kp N6   &kp KP_DIVIDE    &trans
&trans  &kp KP_SUBTRACT  &kp N1   &kp N2  &kp N3   &trans            &trans     &kp N1   &kp N2  &kp N3   &kp KP_SUBTRACT  &trans
&trans  &kp KP_PLUS      &kp DOT  &kp N0  &kp DOT  &kp ENTER         &kp ENTER  &kp DOT  &kp N0  &kp DOT  &kp KP_PLUS      &trans
                                  &trans  &mo 1    &to 0      &to 0  &mo 1      &trans
            >;
        };

        media_layer {
            // Media Layer (Layer 3)

            bindings = <
&trans  &trans      &trans            &trans      &trans        &trans             &trans      &trans        &trans      &trans            &trans      &trans
&trans  &kp C_PREV  &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOL_UP  &kp C_MUTE         &kp C_MUTE  &kp C_VOL_UP  &kp C_NEXT  &kp C_PLAY_PAUSE  &kp C_PREV  &trans
&trans  &trans      &trans            &trans      &kp C_VOL_DN  &trans             &trans      &kp C_VOL_DN  &trans      &trans            &trans      &trans
&trans  &trans      &trans            &trans      &trans        &trans             &trans      &trans        &trans      &trans            &trans      &trans
                                      &trans      &mo 1         &to 0       &to 0  &mo 1       &trans
            >;
        };

        symbol_layer {
            // Symbol Layer (Layer 4)

            bindings = <
&to 0   &kp EXCL    &kp AT     &kp NON_US_HASH  &kp DOLLAR            &kp PERCENT          &kp CARET  &kp AMPS        &kp ASTRK         &kp LPAR   &kp RPAR   &to 0
&trans  &kp TILDE2  &kp GRAVE  &kp PIPE2        &kp NON_US_BACKSLASH  &kp UNDER            &kp PLUS   &kp LEFT_BRACE  &kp RIGHT_BRACE   &kp LBKT   &kp RBKT   &trans
&trans  &kp SQT     &kp DQT    &kp COLON        &kp SEMI              &kp QUESTION         &kp FSLH   &kp LESS_THAN   &kp GREATER_THAN  &kp EQUAL  &kp MINUS  &trans
&trans  &trans      &trans     &trans           &trans                &trans               &trans     &trans          &trans            &trans     &trans     &trans
                               &mo 1            &kp ENTER             &to 0         &to 0  &kp ENTER  &mo 1
            >;
        };

        function_layer {
            // Function Layer (Layer 5)

            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4  &kp F5  &kp F6         &kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans   &trans   &trans
&trans  &trans  &trans  &trans  &trans  &trans         &trans  &trans  &trans  &trans   &trans   &trans
                        &trans  &mo 1   &to 0   &to 0  &mo 1   &trans
            >;
        };

        bt_device_switcher {
            // BT Device Switcher Layer (Layer 6)

            bindings = <
&to 0   &bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3         &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 3  &to 0
&trans  &trans      &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans      &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans        &trans
&trans  &trans      &trans        &trans        &trans        &trans               &trans        &trans        &trans        &trans        &trans        &trans
                                  &trans        &mo 1         &to 0         &to 0  &mo 1         &trans
            >;
        };

        AutoCAD {
            bindings = <
&trans  &trans       &trans               &trans          &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &kp ESCAPE   &kp F3               &kp F8          &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &cad_rotate  &cad_trim            &cad_Line_Poly  &cad_move  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans       &mt RC(RS(C)) RC(C)  &trans          &trans     &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                          &mt DEL ENTER   &trans     &trans  &trans  &trans  &trans
            >;
        };

        Revit {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans          &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans  &trans  &trans  &trans
            >;
        };
    };
};
